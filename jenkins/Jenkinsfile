pipeline {

    agent any
    
    stages {
		stage ('Checkout SCM') {
            steps {
                checkout scm
            }
        }
		
		stage ('Artifactory Maven Configuration') {
		
            steps {
			
				// Values from Artifactory plugin config
                rtServer (
                    id: "ARTIFACTORY_SERVER",
                    url: SERVER_URL,
                    credentialsId: CREDENTIALS
                )

                rtMavenDeployer (
                    id: "MAVEN_DEPLOYER",
                    serverId: "ARTIFACTORY_SERVER",
                    releaseRepo: "libs-release-local",
                    snapshotRepo: "libs-snapshot-local"
                )

                rtMavenResolver (
                    id: "MAVEN_RESOLVER",
                    serverId: "ARTIFACTORY_SERVER",
                    releaseRepo: "libs-release",
                    snapshotRepo: "libs-snapshot"
                )
            }
        }

        stage ('Build') {
		
            steps {
                rtMavenRun (
                    tool: 'maven-default', // Tool name from Jenkins configuration
                    pom: '../pom.xml',
                    goals: 'clean package -B -DskipTests',
                    deployerId: "MAVEN_DEPLOYER",
                    resolverId: "MAVEN_RESOLVER"
                )
            }
        }
		
		stage ('Test') {
		
            steps {
                rtMavenRun (
                    tool: 'maven-default', // Tool name from Jenkins configuration
                    pom: '../pom.xml',
                    goals: 'test',
                    deployerId: "MAVEN_DEPLOYER",
                    resolverId: "MAVEN_RESOLVER"
                )
            }
			post {
                always {
                    junit 'target/surefire-reports/*.xml'
                }
            }
        }

        stage ('Publish build info') {
            steps {
                rtPublishBuildInfo (
                    serverId: "ARTIFACTORY_SERVER"
                )
            }
        }
    }
}
